
Git安装
    下载地址：git-scm.com 完成安装；
Github注册
    网址：github.com 注册 登录

Git使用
    Git只能操作文本文件，txt、html、css、js等等，追踪、监测到每一行。不能跟踪图片、视频。
    建立一个文件夹
    右键选择open git bash here，打开
    1、初始化
    git init
    文件夹中会增加.git文件，如果没有，在文件夹设置中，查看选项里没有勾选隐藏项目
    2、查看
    ls 或者 ls -ah 、 ls -a、ls -h 都可以查看
    3、添加文件到仓库
    git add 文件名   例如：git add note.txt  延展：git add 文件名的前一个或者几个字母，再按tab键，自动完成
    git add .. 添加所有文件
    回车后没有响应，就是成功
    4、提交
    git commit -m 备注  例如：git commit -m "this is first commit"
    回车后有提示，如果是第一次，要提示你：
    Author identity unknown 作者身份未知
    *** Please tell me who you are  告诉我你是谁
    Run 运行
      git config --global user.email "you@example.com"
      git config --global user.name "Your name"
    to set your account's default identity  去设置你的账户的默认身份
    Omit --global to set the identity only in this repository.  省略 --global 只在这个仓库设置身份
    fatal：unable to auto-detect email address. 失败：未能自动设置邮箱地址
    
    重新输入：
    git config --global user.email "dyh858@163.com"
    git config --global user.name "dyh858"
    回车后再提交
    git commit -m "this is first commit"
    5、建立仓库
    在github里面建立仓库
    6、改变当前分支名称
    git branch -M main
    7、查看分支
    git branch
    8、连接github
    git remote add origin https://github.com/dyh858/demo.git
    查看github连接的远程分支
    git remote 
    删除github连接的远程分支
    git remote rm origin
    10、推送
    git push -u hello main
    11、克隆一个github到本地
	git clone https://github.com/dyh858/demo.git
	克隆下来的远程分支后，查看一下远程分支和本地分支，
	git branch 结果 * main
    git origin 结果 origin
	12、从github拉取
    git pull 远程分支 本地分支  例如：git pull origin main
	13、查看状态
	git status
	结果：
	On branch main
	Your branch is up to date with 'origin/main'.

	Changes not staged for commit:
	(use "git add <file>..." to update what will be committed)
	(use "git restore <file>..." to discard changes in working directory)
	modified:   jd-git-note.txt

	no changes added to commit (use "git add" and/or "git commit -a")
	
	翻译：
	在分支mian上：
	您的分支是最新的'origin/main'。

	未提交的更改:
	(使用“git add <file>…”来更新将要提交的内容)
	(使用"git restore <file>…"来丢弃工作目录中的更改)
	修改:jd-git-note.txt

	提交时不添加任何更改(使用"git add"和/或"git commit -a")
		
	以上界面表面，文件已修改，但没
	
	（1）git add jd-git-note.txt
	查看状态 git status
	结果：
	On branch main
	Your branch is up to date with 'origin/main'.

	Changes to be committed:
	(use "git restore --staged <file>..." to unstage)
	modified:   jd-git-note.txt
    
	翻译：
	
   在分支mian上
   您的分支是最新的'origin/main'。

	要提交的更改:
	(使用"git restore——stage <file>…"来卸载)
	修改:jd-git-note.txt
	
	（2）git commit -m "change to satus“
	结果：
	[main ea0f72b] change to status
    1 file changed, 8 insertions(+), 6 deletions(-)
	
	再次查看状态
	git status
	结果：
	On branch main
	Your branch is ahead of 'origin/main' by 1 commit.
	  (use "git push" to publish your local commits)

	nothing to commit, working tree clean

	翻译
	在分支mian上
	你的分支领先于“origin/main”1次提交。
	(使用“git push”来发布本地提交)

	没有什么要提交的，工作树干净
	
	




  



